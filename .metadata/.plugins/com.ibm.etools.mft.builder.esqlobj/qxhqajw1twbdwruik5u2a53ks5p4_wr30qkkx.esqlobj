CREATE FUNCTION AddExceptionDetail(IN inputExceptionList REFERENCE, IN properties REFERENCE) RETURNS CHARACTER
BEGIN

	DECLARE descripcionError CHARACTER '';
	DECLARE crlf CHAR CAST(X'0D0A' AS CHAR CCSID 1208);
	DECLARE tab CHAR CAST(X'0D09' AS CHAR CCSID 1208);
	
	
    DECLARE ptrException REFERENCE TO inputExceptionList.*[1];
	WHILE LASTMOVE(ptrException) AND CARDINALITY(ptrException.*[<].*[])>1 DO
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(ptrException.*[]);
		IF CARDINALITY(ptrException.*[<].*[]) <= 1 THEN
			SET J = J + 1;
		END IF;
		WHILE I <= J DO
			DECLARE descTemp CHARACTER '';
			SET descTemp = GetMessageDescription(ptrException.*[I], FALSE, properties);
			IF descTemp <> '' THEN
				DECLARE index INTEGER 1;
				WHILE CONTAINS(descTemp, '&') DO
					DECLARE valor CHARACTER '';
					
					SET I = I + 1;
					SET valor = GetMessageDescription(ptrException.*[I], TRUE, properties);
					SET descTemp = REPLACE(descTemp, '&'||CAST(index AS CHARACTER), valor);
					SET index = index + 1;
				END WHILE;
				
				IF descripcionError <> '' THEN
					SET descripcionError = descripcionError || tab || descTemp;
				ELSE 
					SET descripcionError = descTemp;
				END IF;
			END IF;
			SET I = I + 1;
		END WHILE;
		MOVE ptrException LASTCHILD;
	END WHILE; 
	
	RETURN descripcionError;
END;